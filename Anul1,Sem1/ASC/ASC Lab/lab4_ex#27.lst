     1                                  bits 32 
     2                                  
     3                                  
     4                                  global start        
     5                                  
     6                                  
     7                                  extern exit               
     8                                  import exit msvcrt.dll    
     9                                  
    10                                  ;Se da quadwordul A. Sa se obtina numarul intreg N reprezentat de bitii 35-37 ai lui A. Sa se obtina apoi in B dublucuvantul rezultat prin rotirea spre dreapta a dublucuvantului inferior al lui A cu N pozitii. Sa se
    11                                  ;bitii 0-3 ai lui C sunt bitii 8-11 ai lui B
    12                                  ;bitii 4-7 ai lui C sunt bitii 16-19 ai lui B
    13                                  segment data use32 class=data
    14 00000000 BE9B5777BE9B5777            a dq 0111011101010111100110111011111001110111010101111001101110111110b
    15 00000008 00000000                    b dd 0
    16 0000000C 00                          c db 0
    17 0000000D 00                          n db 0
    18                                  
    19                                  
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ;Sa se obtina numarul intreg N reprezentat de bitii 35-37 ai lui A
    23 00000000 A0[04000000]                    mov al,byte [a+4]   ;AL=10111110b
    24 00000005 2438                            and al,00111000b    ;izolam bitii 35-37 ai lui A
    25 00000007 C0C003                          rol al,3            ;AL=11100000b
    26 0000000A C0F805                          sar al,5            ;AL=11111111b
    27 0000000D A2[0D000000]                    mov [n],al          ;N=11111111b
    28                                          
    29                                          ;Sa se obtina apoi in B dublucuvantul rezultat prin rotirea spre dreapta a dublucuvantului inferior al lui A cu N pozitii
    30 00000012 A1[00000000]                    mov eax,dword [a]   ;EAX=01110111010101111001101110111110b
    31 00000017 8A0D[0D000000]                  mov cl,[n]          ;CL=N=11111111b
    32 0000001D D3C8                            ror eax,cl          ;EAX se roteste spre dreapta cu N pozitii
    33 0000001F A3[08000000]                    mov [b],eax         ;B=01111100111011101010111100110111b
    34                                          
    35                                          ;Sa se obtina octetul C astfel:
    36                                          ;bitii 0-3 ai lui C sunt bitii 8-11 ai lui B
    37 00000024 A0[09000000]                    mov al,byte [b+1]   ;AL=10101111b
    38 00000029 240F                            and al,00001111b    ;izolam bitii 8-11 ai lui B
    39 0000002B 88C3                            mov bl,al           ;BL=00001111b
    40                                          
    41                                          ;bitii 4-7 ai lui C sunt bitii 16-19 ai lui B
    42 0000002D A0[0A000000]                    mov al,byte [b+2]   ;AL=11101110b
    43 00000032 240F                            and al,00001111b    ;izolam bitii 16-19 ai lui B
    44 00000034 C0C004                          rol al,4            ;AL se roteste spre stanga cu 4 pozitii
    45 00000037 08C3                            or bl,al            ;punem bitii in rezultat
    46 00000039 881D[0C000000]                  mov [c],bl          ;C=11101111b
    47                                          
    48                                          
    49                                      
    50                                          
    51 0000003F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    52 00000041 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
