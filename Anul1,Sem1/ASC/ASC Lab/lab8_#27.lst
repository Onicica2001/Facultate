     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  
     6                                  extern exit,printf,scanf               
     7                                  import exit msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  import scanf msvcrt.dll    
    10                                  
    11                                  ;Se dÄƒ un sir de caractere (definit in segmentul de date). SÄƒ se citeascÄƒ de la tastaturÄƒ un caracter, sÄƒ se determine numÄƒrul de apariÅ£ii al acelui caracter Ã®n ÅŸirul dat ÅŸi sÄƒ se afiÅŸeze acel caracter Ã
    12                                  segment data use32 class=data
    13 00000000 616263646161                sir db 'a','b','c','d','a','a'
    14                                      len_s equ $-sir
    15 00000006 633D00                      mesaj db "c=",0
    16 00000009 256300                      format_1 db "%c",0
    17 0000000C 436172616374657275-         format_2 db "Caracterul %c apare de %d ori",0
    17 00000015 6C2025632061706172-
    17 0000001E 65206465202564206F-
    17 00000027 726900             
    18 0000002A 00000000                    contor dd 0
    19 0000002E 00                          caracter db 0
    20                                  
    21                                  
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ;Citim de la tastatura caracterul 'caracter'
    25                                          
    26 00000000 68[06000000]                    push dword mesaj    ;Punem adresa stringului 'mesaj' pe stiva
    27 00000005 FF15[00000000]                  call[printf]        ;Apelam functia printf si se afiseaza "c= "
    28 0000000B 83C404                          add esp,4           ;Eliberam parametrii de pe stiva
    29                                          
    30 0000000E 68[2E000000]                    push dword caracter ;Punem adresa caracterului 'caracter' pe stiva
    31 00000013 68[09000000]                    push dword format_1 ;Punem adresa stringului 'format_1' pe stiva
    32 00000018 FF15[00000000]                  call[scanf]         ;Apelam functia scanf si asteptam introducerea de la tastatura a unui caracter
    33 0000001E 83C408                          add esp,4*2         ;Eliberam parametrii de pe stiva
    34                                          
    35                                          
    36                                          ;Determinam numarul de aparitii al caracterului 'caracter'
    37                                          
    38 00000021 B906000000                      mov ecx,len_s           ;ECX ia valoarea lungimii sirului sir
    39 00000026 E31D                            jecxz final             ;Daca ECX este 0 sarim la final
    40 00000028 BE[00000000]                    mov esi,sir             ;ESI ia valoarea offsetului sirului sir
    41                                          repeta:
    42 0000002D AC                                  lodsb               ;Incarcam in AL byte-ul de la adresa <DS:ESI>
    43 0000002E 3A05[2E000000]                      cmp al,[caracter]   ;Comparam caracterul din AL cu caracterul 'caracter'
    44 00000034 7404                                je gasit            ;Daca este acelasi caracter sarim la gasit
    45 00000036 E2F5                                loop repeta         
    46 00000038 EB0B                            jmp final   
    47                                          gasit:
    48 0000003A FF05[2A000000]                      inc dword[contor]   ;contor=contor+1
    49 00000040 49                                  dec ecx             ;Decrementam ECX
    50 00000041 E302                                jecxz final         ;Daca ECX este 0 sarim la final
    51 00000043 EBE8                                jmp repeta          ;Sarim la repeta
    52                                          
    53                                          final:
    54                                          ;Afisam caracterul 'caracter' si numarul sau de aparitii
    55                                          ;printf(const char * format, variabila_1, constanta_2, ...)
    56                                          
    57 00000045 FF35[2A000000]                  push dword [contor]     ;Punem valoarea intregului 'contor' pe stiva
    58 0000004B FF35[2E000000]                  push dword [caracter]   ;Punem valoarea caracterului 'caracter' pe stiva
    59 00000051 68[0C000000]                    push dword format_2     ;Punem adresa stringului 'format_2' pe stiva
    60 00000056 FF15[00000000]                  call[printf]            ;Apelam functia printf si se afiseaza "Caracterul 'caracter' apare de 'contor' ori
    61 0000005C 83C40C                          add esp,4*3             ;Eliberam parametrii de pe stiva
    62                                          
    63                                          ; exit(0)
    64 0000005F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    65 00000061 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
