     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external fun
     7                                  extern exit, fopen, fclose, fread, fprintf 
     8                                  extern printf            
     9                                  import exit msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import fread msvcrt.dll
    13                                  import printf msvcrt.dll
    14                                  import fprintf msvcrt.dll
    15                                                        
    16                                  
    17                                  ; Se da un fisier text. Sa se citeasca continutul fisierului, sa se determine litera mica (lowercase) cu cea mai mare frecventa si sa se afiseze acea litera, impreuna cu frecventa acesteia. Numele fisierului text es
    18                                  segment data use32 class=data
    19 00000000 746578742E74787400          nume_fisier db "text.txt", 0 
    20 00000009 7200                        mod_acces db "r", 0 
    21 0000000B FFFFFFFF                    descriptor_fis dd -1 
    22                                      len equ 100
    23 0000000F FF<rept>                    text times len+1 db -1
    24 00000074 616263646566676869-         alfabet db 'abcdefghijklmnopqrstuvwxyz'
    24 0000007D 6A6B6C6D6E6F707172-
    24 00000086 737475767778797A   
    25                                      len_alf equ $-alfabet
    26 0000008E 00000000                    len_text dd 0 
    27 00000092 00000000                    max_fr dd 0 
    28 00000096 00                          max_ch db 0
    29 00000097 4C6974657261202563-         format_afis db "Litera %c,  are frecventa maxima %d", 0 
    29 000000A0 2C2020617265206672-
    29 000000A9 656376656E7461206D-
    29 000000B2 6178696D6120256400 
    30 000000BB 72617370756E732E74-         scrie_fisier db "raspuns.txt" , 0
    30 000000C4 787400             
    31 000000C7 7700                        mod_scrie db "w", 0 
    32 000000C9 FFFFFFFF                    handler_scrie dd -1
    33                                      ; our code starts here
    34                                  segment code use32 class=code
    35                                      start:
    36                                          ; eax = fopen(char* nume fisier, char * mod acces)
    37 00000000 68[09000000]                    push dword mod_acces
    38 00000005 68[00000000]                    push dword nume_fisier
    39 0000000A FF15[00000000]                  call [fopen] 
    40 00000010 83C408                          add esp, 4*2                 ;eliberez parametrii  
    41 00000013 A3[0B000000]                    mov [descriptor_fis], eax    ; salvez valoarea returnata in variabila descriptor_fis
    42                                                                      ; verific daca fopen a deschis cu succes 
    43 00000018 83F800                          cmp eax, 0 
    44 0000001B 0F84FA000000                    je final 
    45                                          
    46                                          ; citesc textul din fisierul deschis cu fread 
    47                                          ; int fread(void * str, int size, int count, FILE * stream)
    48                                          ; eax = fread(text, size , count, descriptor_fis)
    49 00000021 FF35[0B000000]                  push dword [descriptor_fis]
    50 00000027 6A64                            push dword len  ; numarul maxim de elemente citite din fisier 
    51 00000029 6A01                            push dword 1 
    52 0000002B 68[0F000000]                    push dword text 
    53 00000030 FF15[00000000]                  call [fread] 
    54 00000036 83C410                          add esp ,4*4 
    55 00000039 A3[8E000000]                    mov [len_text], eax ; in len_text am lungimea textului din fisier 
    56                                          ;;;;;;; inchid fisierul 
    57 0000003E FF35[0B000000]                  push dword [descriptor_fis]
    58 00000044 FF15[00000000]                  call [fclose] 
    59 0000004A 83C404                          add esp , 4 
    60                                          ;;;;;;;;;;;;;;;;;;;
    61 0000004D BE00000000                      mov esi, 0
    62 00000052 B91A000000                      mov ecx, len_alf            ; iau fiecare litera din alfabet si vad de cate ori se repeta in text  
    63 00000057 83F900                          cmp ecx,0 
    64 0000005A 0F84BB000000                    je final
    65                                          repeta:
    66 00000060 BB00000000                      mov ebx, 0 ; frecventa literei  
    67 00000065 8A86[74000000]                  mov al, [alfabet+esi]                        ; in al am litera din aflabet 
    68                                                                                ; trebuie sa parcurc stringul text si sa numar de cate ori al == text[i] 
    69                                         
    70 0000006B 51                              push ecx ; salvez ecx un pentru loop repeta 
    71                                          
    72 0000006C 8B0D[8E000000]                  mov ecx, [len_text]  
    73                                       
    74 00000072 BF00000000                      mov edi, 0 
    75 00000077 83F900                          cmp ecx, 0 
    76 0000007A 0F849B000000                    je final 
    77                                      vezi_text:
    78 00000080 8A97[0F000000]                  mov dl, [text+edi] ; dl = text[i] 
    79 00000086 38D0                            cmp al, dl 
    80 00000088 7402                            je sunt_egale
    81 0000008A EB01                            jmp skip
    82                                      sunt_egale:
    83 0000008C 43                              inc ebx 
    84                                      skip:     
    85 0000008D 47                              inc edi ; i++ 
    86 0000008E E2F0                        loop vezi_text  ; dec ecx
    87 00000090 3B1D[92000000]                  cmp ebx,[max_fr] 
    88 00000096 7702                            ja new_max  
    89 00000098 EB0B                            jmp skip2
    90                                      new_max:
    91                                          ; EBX > max_fr 
    92 0000009A 891D[92000000]                  mov [max_fr], ebx 
    93 000000A0 A2[96000000]                    mov [max_ch], al 
    94                                      skip2:    
    95 000000A5 59                              pop ecx; readuc ecx, ul pentru a parcurge literele din alfabet 
    96 000000A6 46                              inc esi
    97 000000A7 E2B7                        loop repeta 
    98                                      
    99                                          ; afisez litera si frecventa 
   100                                          ; int printf(const char * format, variabila_1, constanta_2, ...);
   101                                          ; printf(format, chr , fr ) 
   102                                          ; AFISARE PE ECRAN
   103 000000A9 A1[92000000]                    mov eax,  [max_fr]
   104 000000AE BB00000000                      mov ebx, 0 
   105 000000B3 8A1D[96000000]                  mov bl, [max_ch]  
   106 000000B9 50                              push eax   
   107 000000BA 53                              push ebx 
   108 000000BB 68[97000000]                    push dword format_afis
   109 000000C0 FF15[00000000]                  call [printf] 
   110 000000C6 83C40C                          add esp, 4*3 
   111                                          
   112                                          ; PENTRU SCRIERE IN FISIER 
   113                                                                      ; DESCHID FISIERUL
   114                                          ; fopen(char* nume fisier, char * mod acces)
   115 000000C9 68[C7000000]                    push dword mod_scrie
   116 000000CE 68[BB000000]                    push dword scrie_fisier
   117 000000D3 FF15[00000000]                  call [fopen] 
   118 000000D9 83C408                          add esp, 4*2 
   119 000000DC 83F800                          cmp eax, 0 
   120 000000DF 743A                            je final
   121 000000E1 A3[C9000000]                    mov [handler_scrie] , eax 
   122                                  
   123                                                                          ; SCRIU IN FISIER   
   124                                         ; ; int fprintf(FILE * stream, const char * format, <variabila_1>, <constanta_2>, <...>)
   125 000000E6 A1[92000000]                    mov eax, [max_fr]
   126 000000EB BB00000000                      mov ebx,0 
   127 000000F0 8A1D[96000000]                  mov bl, [max_ch] 
   128 000000F6 50                              push eax 
   129 000000F7 53                              push ebx 
   130 000000F8 68[97000000]                    push dword format_afis
   131 000000FD FF35[C9000000]                  push dword [handler_scrie]
   132 00000103 FF15[00000000]                  call [fprintf] 
   133 00000109 83C410                          add esp, 4*4 
   134                                          ; ; 
   135                                                              ; INCHID FISIERUL 
   136 0000010C FF35[C9000000]                  push dword [handler_scrie]
   137 00000112 FF15[00000000]                  call [fclose] 
   138 00000118 83C404                          add esp , 4 
   139                                      final: 
   140                                          ; exit(0)
   141 0000011B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   142 0000011D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
