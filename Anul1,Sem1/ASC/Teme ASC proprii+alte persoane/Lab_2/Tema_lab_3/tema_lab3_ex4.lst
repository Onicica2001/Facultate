     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 10                          a db 10h
    14 00000001 60                          b db 60h
    15 00000002 20                          c db 20h
    16 00000003 9000                        d dw 90h
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ;d/[(a+b)-(c+c)]
    22 00000000 A0[00000000]                    mov al, [a]
    23 00000005 0205[01000000]                  add al, [b] ; al = a + b
    24 0000000B 8A1D[02000000]                  mov bl, [c]
    25 00000011 021D[02000000]                  add bl, [c] ; bl = c + c
    26 00000017 28D8                            sub al, bl ; al = (a + b) - (c + c)
    27 00000019 88C3                            mov bl, al ; bl = (a + b) - (c + c)
    28 0000001B 66A1[03000000]                  mov ax, [d] ; ax = d
    29 00000021 F6F3                            div bl
    30                                          ; exit(0)
    31 00000023 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 00000025 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
