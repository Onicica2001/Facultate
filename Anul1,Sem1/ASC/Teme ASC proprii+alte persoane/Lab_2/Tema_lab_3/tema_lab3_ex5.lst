     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 00                          b db 0
    14 00000001 01                          c db 1
    15 00000002 0400                        e dw 4
    16 00000004 0500                        f dw 5
    17 00000006 0700                        g dw 7
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ;[(e+f-g)+(b+c)*3]/5
    23 00000000 66A1[02000000]                  mov ax, [e]
    24 00000006 660305[04000000]                add ax, [f]
    25 0000000D 662B05[06000000]                sub ax, [g]
    26 00000014 6689C3                          mov bx, ax ; bx = e+f-g
    27 00000017 A0[00000000]                    mov al, [b]
    28 0000001C 0205[01000000]                  add al, [c]
    29 00000022 B203                            mov dl, 3
    30 00000024 F6E2                            mul dl
    31 00000026 6601D8                          add ax, bx ; ax = (e+f-g)+(b+c)*3
    32 00000029 B205                            mov dl, 5
    33 0000002B F6F2                            div  dl
    34                                          
    35                                          ; exit(0)
    36 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
