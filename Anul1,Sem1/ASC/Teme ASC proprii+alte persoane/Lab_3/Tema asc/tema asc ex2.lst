     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ;a - byte, b - word, c - double word, d - qword - Interpretare cu semn
    14 00000000 03                          a db 3
    15 00000001 0A00                        b dw 10
    16 00000003 0D000000                    c dd 13
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ;c+a+b+b+a
    22                                          
    23 00000000 BB00000000                      mov ebx, 0
    24 00000005 8B1D[03000000]                  mov ebx, [c]
    25                                          
    26 0000000B B800000000                      mov eax, 0
    27 00000010 A0[00000000]                    mov al, [a]
    28 00000015 6698                            cbw
    29 00000017 98                              cwde
    30 00000018 89C1                            mov ecx, eax
    31                                          
    32 0000001A 01CB                            add ebx, ecx 
    33                                          
    34 0000001C B800000000                      mov eax, 0
    35 00000021 66A1[01000000]                  mov ax, [b]
    36 00000027 98                              cwde 
    37                                          
    38 00000028 01C3                            add ebx, eax
    39 0000002A 01C3                            add ebx, eax
    40 0000002C 01CB                            add ebx, ecx
    41                                          
    42                                      
    43                                          ; exit(0)
    44 0000002E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 00000030 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
